name: Build Package

on:
  workflow_dispatch:

  push:
    branches: [ "*" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Dependencies
        shell: bash
        run: |
          sudo apt update
          sudo apt install -y \
            fontforge \
            wget
          mkdir fontpatcher
          cd fontpatcher
          wget -c https://github.com/ryanoasis/nerd-fonts/releases/latest/download/FontPatcher.zip
          unzip FontPatcher.zip
      
      - name: Patch Fonts
        shell: bash
        run: |
          test ! -d usr/share/fonts/noto-nerd/ && mkdir -p usr/share/fonts/noto-nerd/
          # # Only Sans
          # for i in $(ls fonts/NotoSans*); do
          #   fontforge --script fontpatcher/font-patcher --complete --quiet $i --outputdir usr/share/fonts/noto-nerd/
          # done
          
          # # Only Serif
          # for i in $(ls fonts/NotoSerif*); do
          #   fontforge --script fontpatcher/font-patcher --complete --quiet $i --outputdir usr/share/fonts/noto-nerd/
          # done
          
          # Only mono
          for i in $(ls fonts/NotoSansMono*); do
            fontforge --script fontpatcher/font-patcher --complete --quiet $i --outputdir usr/share/fonts/noto-nerd/ --name "NotoMono Nerd Font"
            #-$(awk -F'[-.]' '{print $2}' <<< $i)
          done
      
      - name: Update github
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          rm -r fontpatcher
          git add --all
          if [ -n "$(git commit -m "update $(date +%y-%m-%d_%H:%M)" -a | grep "nothing to commit")" ];then exit 0; fi

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
      
      - name: Send Hooks BigLinux Build Package
        shell: bash
        run: |
          if [ -z "$(grep biglinux-package-template pkgbuild/PKGBUILD)" ];then
            curl -X POST -H "Accept: application/json" -H "Authorization: token ${{ secrets.WEBHOOK_TOKEN }}" --data '{"event_type": "${{ github.repository }}", "client_payload": { "branch": "${{ github.ref_name }}", "url": "https://github.com/${{ github.repository }}"}}' https://api.github.com/repos/BigLinux-Package-Build/build-package/dispatches
            curl -X POST -H "Accept: application/json" -H "Authorization: token ${{ secrets.WEBHOOK_TOKEN }}" --data '{"event_type": "${{ github.repository }}", "client_payload": { "branch": "${{ github.ref_name }}", "url": "https://github.com/${{ github.repository }}"}}' https://api.github.com/repos/BigLinux-Package-Build/build-package-ARM/dispatches
          fi
